#!/bin/sh

feed="${1:-$(dmenu -p 'Paste URL or file path')}"
[ -z "$feed" ] && exit 1

: "${TERMINAL:=xterm}"
: "${EDITOR:=vim}"
: "${BROWSER:=firefox}"
: "${XDG_CACHE_HOME:=$HOME/.cache}"

# Funciones para acciones comunes
copy_url() {
  echo "$feed" | xclip -selection clipboard
}

mpv_play() {
  setsid -f mpv -quiet "$feed" >/dev/null 2>&1
}

mpv_loop() {
  setsid -f mpv -quiet --loop "$feed" >/dev/null 2>&1
}

mpv_float() {
  setsid -f "$TERMINAL" -e mpv --geometry=+0-0 --autofit=30% --title="mpvfloat" "$feed" >/dev/null 2>&1
}

queue_yt_dlp() {
  qndl "$feed" >/dev/null 2>&1
}

queue_yt_dlp_audio() {
  qndl "$feed" 'yt-dlp -o "%(title)s.%(ext)s" -f bestaudio --embed-metadata --restrict-filenames' >/dev/null 2>&1
}

queue_download() {
  qndl "$feed" 'curl -LO' >/dev/null 2>&1
}

open_pdf() {
  zathura-url "$feed" >/dev/null 2>&1 &
}

open_nsxiv() {
  nsxiv-url "$feed" >/dev/null 2>&1 &
}

edit_with_vim() {
  filename="/tmp/$(basename "${feed}" | sed 's/%20/ /g')"
  curl -sL "$feed" -o "$filename" && setsid -f "$TERMINAL" -e "$EDITOR" "$filename" >/dev/null 2>&1
}

set_background() {
  pic="$XDG_CACHE_HOME/pic"
  curl -L "$feed" -o "$pic" && xwallpaper --zoom "$pic" >/dev/null 2>&1
}

open_browser() {
  setsid -f "$BROWSER" "$feed" >/dev/null 2>&1
}

open_lynx() {
  lynx "$feed" >/dev/null 2>&1
}

# Menu
choice=$(printf "copy url\nnsxiv\nsetbg\nPDF\nbrowser\nlynx\nvim\nmpv\nmpv loop\nmpv float\nqueue download\nqueue yt-dlp\nqueue yt-dlp audio" | dmenu -i -p "Open it with?")

case "$choice" in
  "copy url") copy_url ;;
  "mpv") mpv_play ;;
  "mpv loop") mpv_loop ;;
  "mpv float") mpv_float ;;
  "queue yt-dlp") queue_yt_dlp ;;
  "queue yt-dlp audio") queue_yt_dlp_audio ;;
  "queue download") queue_download ;;
  "PDF") open_pdf ;;
  "nsxiv") open_nsxiv ;;
  "vim") edit_with_vim ;;
  "setbg") set_background ;;
  "browser") open_browser ;;
  "lynx") open_lynx ;;
  *) exit 1 ;;
esac
