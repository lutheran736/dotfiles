#!/bin/bash

# Searches the website for RSS feeds and adds them to newsboat url list. Can
# also find hidden RSS feeds on various websites, namely Youtube, Reddit,
# Vimeo, Github, Gitlab and Medium. Gets site url as $1 or (if not present)
# from X clipboard. Gets tags as $2. If it finds more than one feed, calls
# dmenu for the user to choose which one to add. I have bound it to a keyboard
# shortcut so i copy a site link and easily add its feed to the reader.

# Inspired by and based on the logic of this extension:
# https://github.com/shevabam/get-rss-feed-url-extension

# This script requires rssadd to add feeds to the list.

getlink() {
  local url="$1"
  feeds="$(curl -s "$url" | grep -Ex '.*type=.*(rss|rdf|atom).*' | sed 's/ //g')"
  url="${url%%/*}//${url#*//*/}"

  for rsspath in $feeds; do
    rsspath="${rsspath#*href=[\"\']}"
    rsspath="${rsspath%[\"\']*}"
    if echo "$rsspath" | grep "http" >/dev/null; then
      link="$rsspath"
    elif echo "$rsspath" | grep -E "^/" >/dev/null; then
      link="${url%/}/${rsspath#/}"
    else
      link="${url%/}/$rsspath"
    fi
    echo "$link"
  done
}

getRedditRss() {
  echo "${1%/}.rss"
}

getYoutubeRss() {
  local url="$1"
  path="${url#*//}"
  case "$path" in
  *"/channel/"*)
    channel_id="${path#*/channel/}"
    channel_id="${channel_id%%/*}"
    feed="https://www.youtube.com/feeds/videos.xml?channel_id=${channel_id}"
    ;;
  *"/c/"* | *"/user/"*)
    feed=$(wget -q "$url" -O tmp_rssget_yt &&
      sed -n 's|.*\("rssUrl":"[^"]*\).*|\1|; p' tmp_rssget_yt |
      grep rssUrl |
        sed 's|"rssUrl":"||')
    ;;
  esac
  echo "$feed"
}

getVimeoRss() {
  local url="$1"
  if echo "$url" | grep -q "/videos$"; then
    feed_url="${url%/videos}/rss"
  else
    feed_url="${url%/}/videos/rss"
  fi
  echo "$feed_url"
}

getGithubRss() {
  local url="${1%/}"
  if echo "$url" | grep -E "github.com/[^/]*/[a-zA-Z0-9].*" >/dev/null; then
    echo "${url}/commits.atom"
    echo "${url}/releases.atom"
    echo "${url}/tags.atom"
  elif echo "$url" | grep -E "github.com/[^/]*(/)" >/dev/null; then
    echo "${url}.atom"
  fi
}

getGitlabRss() {
  local url="${1%/}"
  echo "${url}.atom"
}

getMediumRss() {
  echo "${1//\/tag\//\/feed\/}"
}

if [ -n "$1" ]; then
  url="$1"
else
  url="$(xclip -selection clipboard -o)"
  [ -z "$url" ] && echo "usage: $0 url 'tag1 tag2 tag3'" && exit 1
fi

list=()

yt_regex="^(http(s)?://)?((w){3}\.)?(youtube\.com|invidio\.us|invidious\.flokinet\.to|invidious\.materialio\.us|iv\.datura\.network|invidious\.perennialte\.ch|invidious\.fdn\.fr|invidious\.private\.coffee|invidious\.protokolla\.fi|invidious\.privacyredirect\.com|yt\.artemislena\.eu|yt\.drgnz\.club|invidious\.incogniweb\.net|yewtu\.be|inv\.tux\.pizza|invidious\.reallyaweso\.me|iv\.melmac\.space|inv\.us\.projectsegfau\.lt|inv\.nadeko\.net|invidious\.darkness\.services|invidious\.jing\.rocks|invidious\.privacydev\.net|inv\.in\.projectsegfau\.lt|invidious\.drgns\.space)/(channel|user|c).+"
reddit_regex="^(http(s)?://)?((w){3}\.)?reddit\.com.*"
vimeo_regex="^(http(s)?://)?((w){3}.)?vimeo\.com.*"
if echo "$url" | grep -Ex "$yt_regex" >/dev/null; then
  list+=("$(getYoutubeRss "$url")")
elif echo "$url" | grep -Ex "$reddit_regex" >/dev/null; then
  list+=("$(getRedditRss "$url")")
# vimeo actually works with getlink
elif echo "$url" | grep -E "$vimeo_regex" >/dev/null; then
  list+=("$(getVimeoRss "$url")")
elif echo "$url" | grep -E "github.com" >/dev/null; then
  mapfile -t github_feeds < <(getGithubRss "$url")
  list+=("${github_feeds[@]}")
# gitlab also works with getlink
elif echo "$url" | grep -E "gitlab.com/[a-zA-Z0-9].*" >/dev/null; then
  list+=("$(getGitlabRss "$url")")
elif echo "$url" | grep -E "medium.com/tag" >/dev/null; then
  list+=("$(getMediumRss "$url")")
else
  mapfile -t link_feeds < <(getlink "$url")
  list+=("${link_feeds[@]}")
fi

if [ "${#list[@]}" -eq 1 ]; then
  chosen_link="${list[0]}"
else
  chosen_link=$(printf '%s\n' "${list[@]}" | dmenu -p "Choose a feed:")
fi

tags="$2"
if command -v rssadd >/dev/null; then
  rssadd "$chosen_link" "$tags"
fi
echo "$chosen_link" "$tags"
